buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "2.0.20"
    id "com.dorongold.task-tree" version "1.4"
}

group 'qilin'
// version format: major.minor.patch
version '0.9.2.5-CORAX-FORK'

allprojects {

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://repo1.maven.org/maven2/" }
        maven {
            setUrl("http://gitlab.feysh.local/api/v4/groups/77/-/packages/maven")
            setAllowInsecureProtocol(true)
            name = "Gitlab"
            credentials(HttpHeaderCredentials) {
                name = "Deploy-Token"
                value = "QzCDrcu9zWMoFsKHxbaR"
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
        mavenCentral()
    }
}

dependencies {
    implementation(project(':qilin.microben'))
    implementation(project(':qilin.pta'))
    implementation(project(':qilin.core'))
    implementation(project(':qilin.util'))
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

task fatJar(type: Jar, dependsOn: ['build']) {
    manifest {
        attributes 'artifact': 'qilin',
                'Version': getArchiveVersion(),
                'Main-Class': 'driver.Main'
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    doLast {
        copy {
            from "$buildDir/libs/${archiveBaseName.get()}-${getArchiveVersion().get()}.jar"
            into "$rootDir/artifact/"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    dependencies {
        // https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '2.0.20'
        implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.9.0-RC.2'
    }

    group rootProject.group
    version rootProject.version

    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    sourceSets.main {
        java { srcDirs = ['src'] }
        kotlin { srcDirs = ['src'] }
    }

    sourceSets.test {
        java.srcDirs = ['test']
    }

    publishing.publications {
        qilin(MavenPublication) {
            artifactId = artifactId.substring(6)
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }

    publishing.repositories {
        maven {
            url "http://gitlab.feysh.local/api/v4/projects/376/packages/maven"
            allowInsecureProtocol = true
            credentials(HttpHeaderCredentials) {
                name = "Deploy-Token"
                value = "QzCDrcu9zWMoFsKHxbaR"
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}
